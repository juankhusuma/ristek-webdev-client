import Tweet from '@/components/Tweet'
import TweetForm from '@/components/TweetForm'
import { app } from '@/lib/firebase'
import TweetProvider, { TweetContext } from '@/providers/TweetProvider'
import { ITweet } from '@/types/tweet'
import axios from 'axios'
import { getAuth } from 'firebase/auth'
import { getDownloadURL, getStorage, ref, uploadBytes } from 'firebase/storage'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { useEffect, useState } from 'react'
import { useAuthState } from "react-firebase-hooks/auth"
import { useUploadFile } from "react-firebase-hooks/storage"

export default function Home() {
  const auth = getAuth(app)
  const [user] = useAuthState(auth);


  user?.getIdToken().then(token => console.log(token))
  const [data, setData] = useState<ITweet[]>([])


  useEffect(() => {
    (async () => {
      try {
        if (!user) {
          setData([])
          return
        }
        const { data } = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/tweet`, {
          headers: {
            "Authorization": `Bearer ${await user?.getIdToken()}`
          }
        })
        setData(data)
        console.log(data)
      } catch (err) {
        console.error(err);
      }
    })()
  }, [user])

  return (
    <>
      <Head>
        <title>Ristek Tweet</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <TweetProvider value={{ tweets: data, setTweets: setData }}>
        <main className='mx-10 w-1/2'>
          {user &&
            <TweetForm ctx={TweetContext} />
          }
          <h1 className='mt-10 mb-2 text-2xl font-bold text-sky-400'>Explore</h1>
          <hr />
          {data.length === 0 ?
            <div>You have nothing on your feed.</div>
            : <ul className='mt-10 mb-20'>
              {data.map((tweet, id) => <Tweet
                ctx={TweetContext}
                key={id}
                id={tweet.id}
                username={tweet.author.displayName}
                profileURL={tweet.author.photoURL}
                body={tweet.body}
                createdAt={tweet.createAt}
                imageURL={tweet.imageURL as any}
                likeCount={tweet.likes}
                replyCount={tweet.replies}
                userId={tweet.author.uid}
                likedBy={tweet.likedBy}
              />)}
            </ul>}
        </main>
      </TweetProvider>
    </>
  )
}
